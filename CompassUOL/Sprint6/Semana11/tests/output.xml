<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.2.2 (Python 3.13.3 on win32)" generated="2025-06-06T10:24:38.628658" rpa="false" schemaversion="5">
<suite id="s1" name="Login Tests" source="C:\Users\Lucas\pb-compassuol\CompassUOL\Sprint6\Semana11\tests\login_tests.robot">
<test id="s1-t1" name="Cenario: Login Com Credenciais Validas" line="39">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-06T10:24:38.935731" level="INFO">Creating Session using : alias=ServeRestSession, url=http://98.81.214.7:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>ServeRestSession</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-06T10:24:38.935563" elapsed="0.000332"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-06T10:24:38.936354" level="INFO">${payload} = {'email': 'fulano@qa.com', 'password': 'teste'}</msg>
<var>${payload}</var>
<arg>email=fulano@qa.com</arg>
<arg>password=teste</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-06T10:24:38.936105" elapsed="0.000273"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-06-06T10:24:39.232098" level="INFO">POST Request : url=http://98.81.214.7:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '47', 'Content-Type': 'application/json'} 
 body=b'{"email": "fulano@qa.com", "password": "teste"}' 
 </msg>
<msg time="2025-06-06T10:24:39.232374" level="INFO">POST Response : url=http://98.81.214.7:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '265', 'Date': 'Fri, 06 Jun 2025 13:24:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNzQ5MjE2Mjc5LCJleHAiOjE3NDkyMTY4Nzl9.s0f7hImq7bnOgTINvJVXXtuBzWmXOtBtJoNRn_0SqxA"
} 
 </msg>
<msg time="2025-06-06T10:24:39.232665" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>ServeRestSession</arg>
<arg>${LOGIN_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-06T10:24:38.936617" elapsed="0.296116"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-06-06T10:24:39.234459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-06-06T10:24:39.233399" elapsed="0.001196"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${response.json()}</arg>
<arg>authorization</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-06-06T10:24:39.235185" elapsed="0.000969"/>
</kw>
<status status="PASS" start="2025-06-06T10:24:38.934784" elapsed="0.301928"/>
</test>
<test id="s1-t2" name="Cenario: Login Com Email Invalido" line="46">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-06T10:24:39.239239" level="INFO">Creating Session using : alias=ServeRestSession, url=http://98.81.214.7:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>ServeRestSession</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-06T10:24:39.238949" elapsed="0.000575"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-06T10:24:39.240391" level="INFO">${payload} = {'email': 'email.invalido@qa.com', 'password': 'teste'}</msg>
<var>${payload}</var>
<arg>email=email.invalido@qa.com</arg>
<arg>password=teste</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-06T10:24:39.240026" elapsed="0.000425"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-06-06T10:24:39.529125" level="INFO">POST Request : url=http://98.81.214.7:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '55', 'Content-Type': 'application/json'} 
 body=b'{"email": "email.invalido@qa.com", "password": "teste"}' 
 </msg>
<msg time="2025-06-06T10:24:39.529323" level="INFO">POST Response : url=http://98.81.214.7:3000/login 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '48', 'Date': 'Fri, 06 Jun 2025 13:24:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Email e/ou senha inv치lidos"
} 
 </msg>
<msg time="2025-06-06T10:24:39.529602" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>ServeRestSession</arg>
<arg>${LOGIN_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-06T10:24:39.240899" elapsed="0.288770"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-06-06T10:24:39.531443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-06-06T10:24:39.530412" elapsed="0.001163"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Email e/ou senha inv치lidos</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-06-06T10:24:39.532206" elapsed="0.006230"/>
</kw>
<status status="PASS" start="2025-06-06T10:24:39.238020" elapsed="0.301127"/>
</test>
<test id="s1-t3" name="Cenario: Login Com Senha Invalida" line="53">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-06T10:24:39.541841" level="INFO">Creating Session using : alias=ServeRestSession, url=http://98.81.214.7:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>ServeRestSession</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-06T10:24:39.541439" elapsed="0.000649"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-06T10:24:39.542939" level="INFO">${payload} = {'email': 'fulano@qa.com', 'password': 'senhaerrada'}</msg>
<var>${payload}</var>
<arg>email=fulano@qa.com</arg>
<arg>password=senhaerrada</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-06T10:24:39.542598" elapsed="0.000391"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-06-06T10:24:39.829434" level="INFO">POST Request : url=http://98.81.214.7:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '53', 'Content-Type': 'application/json'} 
 body=b'{"email": "fulano@qa.com", "password": "senhaerrada"}' 
 </msg>
<msg time="2025-06-06T10:24:39.830031" level="INFO">POST Response : url=http://98.81.214.7:3000/login 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '48', 'Date': 'Fri, 06 Jun 2025 13:24:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Email e/ou senha inv치lidos"
} 
 </msg>
<msg time="2025-06-06T10:24:39.830322" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>ServeRestSession</arg>
<arg>${LOGIN_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-06T10:24:39.543467" elapsed="0.286916"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-06-06T10:24:39.832040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-06-06T10:24:39.831101" elapsed="0.001063"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Email e/ou senha inv치lidos</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-06-06T10:24:39.832743" elapsed="0.001139"/>
</kw>
<status status="PASS" start="2025-06-06T10:24:39.540470" elapsed="0.293855"/>
</test>
<status status="PASS" start="2025-06-06T10:24:38.629831" elapsed="1.205989"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat name="Login Tests" id="s1" pass="3" fail="0" skip="0">Login Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
